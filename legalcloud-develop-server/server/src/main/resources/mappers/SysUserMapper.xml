<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.repeatlink.common.mapper.SysUserMapper">
  
  <resultMap id="BaseResultMap" type="cn.repeatlink.common.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="enable" jdbcType="SMALLINT" property="enable" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  
  <resultMap id="infoResultMap" type="cn.repeatlink.module.manage.dto.UserInfo">

    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
   
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
   
    <result column="password" jdbcType="VARCHAR" property="password" />
    
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="enable" jdbcType="SMALLINT" property="enable" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  	<sql id="selectUserVo">
  		select 
  			u.user_id, 
  			u.user_name, 
  			u.name, 
  			u.user_type, 
  			u.email, 
  			u.phonenumber, 
  			u.sex, 
  			u.avatar, 
    		u.password, 
    		u.login_ip, 
    		u.login_date, 
    		u.status,
    		u.enable, 
    		u.create_by, 
    		u.create_time, 
    		u.update_by, 
    		u.update_time, 
    		u.remark
 		from sys_user u   		
 
  	</sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
  
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.repeatlink.common.entity.SysUser" useGeneratedKeys="true" keyProperty="userId">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (user_name, name, 
      user_type, email, phonenumber, 
      sex, avatar, `password`, 
      login_ip, login_date, `status`, enable, 
      create_by, create_time, update_by, 
      update_time, remark)
    values ( #{userName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{enable,jdbcType=SMALLINT}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.repeatlink.common.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=SMALLINT},
      enable = #{enable,jdbcType=SMALLINT},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_name, name, user_type, email, phonenumber, sex, avatar, 
    password, login_ip, login_date, `status`,enable, create_by, create_time, update_by, update_time, 
    remark
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  
    <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_name, name, user_type, email, phonenumber, sex, avatar, 
    password, login_ip, login_date, `status`,enable, create_by, create_time, update_by, update_time, 
    remark
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT} for update
  </select>
  
  
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_name, name, user_type, email, phonenumber, sex, avatar, 
    `password`, login_ip, login_date, `status`, enable,create_by, create_time, update_by, update_time, 
    remark
    from sys_user
  </select>
  <select id="selectByUserName" resultMap="BaseResultMap">
    select user_id, user_name, name, user_type, email, phonenumber, sex, avatar, 
    `password`, login_ip, login_date, `status`,enable, create_by, create_time, update_by, update_time, 
    remark
    from sys_user
    where 
    	user_name=#{userName}
    and 
    	status=1
    and 
    	enable=1
  </select>
  <select id="searchByCondition" parameterType="cn.repeatlink.module.manage.dto.UserInfo" resultMap="infoResultMap">
  	select id, user_name, name, 
      user_type, email, phonenumber, 
      sex,remark
     from sys_user
  
  </select>
  <select id="checkUserNameUnique" parameterType="String" resultMap="BaseResultMap">
		select user_id, user_name from sys_user where user_name = #{userName} limit 1 for update
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="BaseResultMap">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} limit 1 for update
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="BaseResultMap">
		select user_id, email from sys_user where email = #{email} limit 1 for update
	</select>
	
	<select id="search" parameterType="cn.repeatlink.module.manage.dto.UserInfo" resultType="cn.repeatlink.module.manage.dto.UserInfo">
		<include refid="selectUserVo"></include>
		<where>
			<if test="userName != null and userName != ''">
				AND u.user_name like concat('%', #{userName}, '%')
			</if>
			<if test="name != null and name != ''">
				AND u.name like concat('%', #{name}, '%')
			</if>
			<if test="email != null and email != ''">
				AND u.email like concat('%', #{email}, '%')
			</if>
			<if test="sex != null and sex != ''">
				AND u.sex = #{sex}
			</if>
			<if test="phonenumber != null and phonenumber != ''">
				AND u.phonenumber like concat('%', #{phonenumber}, '%')
			</if>
			<if test="status != null">
				AND u.status = #{status}
			</if>
			<if test="enable != null">
				AND u.enable = #{enable}
			</if>
		</where>
	</select>
</mapper>